# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Build & Deploy
on:
  workflow_dispatch:
  push:
    paths-ignore:
      - "*.md"
      - ".gitignore"
    branches: [ main ]

jobs:

  lint:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Setup Python
      uses: actions/setup-python@v2
      with:
        python-version: "3.x"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip poetry==1.1.12
        poetry install
    - name: Lint with black + isort
      run: |
        poetry run black --check --config=./pyproject.toml .
        poetry run isort --check --diff .
    - name: Test with pytest

  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.7", "3.8", "3.9", "3.10"]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip poetry==1.1.12
        poetry install
    - name: Test with pytest
      run: |
        poetry run pytest
        
  deploy:
    needs: [lint, build]
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Setup Python
      uses: actions/setup-python@v2
      with:
        python-version: "3.x"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip poetry==1.1.12
        poetry install
    - name: Update version
      run: |
        poetry version $(date +%Y.%m.%d.%H.%M)
    - name: Publish
      run: |
        poetry publish -u ${{ secrets.PYPI_USER }} -p '${{ secrets.PYPI_PASSWORD }}' --build
    - name: Commit and Push updated pyproject.toml
      run: |
        git config --global user.name "Github Action"
        git config --global user.email "github@action.com"
        git add pyproject.toml
        git commit -m "Bump version"
        git push
